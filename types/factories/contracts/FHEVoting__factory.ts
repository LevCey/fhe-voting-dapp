/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FHEVoting, FHEVotingInterface } from "../../contracts/FHEVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_candidates",
        type: "string[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "candidateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "CandidateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "candidateId",
        type: "uint256",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "VotingEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "VotingStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "addCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidateVotes",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidates",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
    ],
    name: "getCandidateName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCandidatesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
    ],
    name: "getEncryptedVotes",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getHasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "_encryptedVote",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_inputProof",
        type: "bytes",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801562000010575f80fd5b506040516200173b3803806200173b83398101604081905262000033916200034c565b620000d9620000d3604080516080810182525f80825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf696020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273901f8942346f7ab3a01f6d7613119bca447bb030606082015290565b62000122565b620000f873a02cda4ca3a71d7c46997716f4283aa851c2881262000201565b33608052805162000110905f9060208401906200023e565b50506003805460ff19169055620005da565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b50565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b0319166001600160a01b03831617905550565b828054828255905f5260205f2090810192821562000287579160200282015b828111156200028757825182906200027690826200050e565b50916020019190600101906200025d565b506200029592915062000299565b5090565b8082111562000295575f620002af8282620002b9565b5060010162000299565b508054620002c79062000484565b5f825580601f10620002d7575050565b601f0160209004905f5260205f2090810190620001fe91905b8082111562000295575f8155600101620002f0565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171562000344576200034462000305565b604052919050565b5f60208083850312156200035e575f80fd5b82516001600160401b038082111562000375575f80fd5b8185019150601f86601f8401126200038b575f80fd5b825182811115620003a057620003a062000305565b8060051b620003b186820162000319565b918252848101860191868101908a841115620003cb575f80fd5b87870192505b838310156200047657825186811115620003e9575f80fd5b8701603f81018c13620003fa575f80fd5b888101518781111562000411576200041162000305565b62000424818801601f19168b0162000319565b81815260408e818486010111156200043a575f80fd5b5f5b8381101562000459578481018201518382018e01528c016200043c565b50505f9181018b01919091528352509187019190870190620003d1565b9a9950505050505050505050565b600181811c908216806200049957607f821691505b602082108103620004b857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200050957805f5260205f20601f840160051c81016020851015620004e55750805b601f840160051c820191505b8181101562000506575f8155600101620004f1565b50505b505050565b81516001600160401b038111156200052a576200052a62000305565b62000542816200053b845462000484565b84620004be565b602080601f83116001811462000578575f8415620005605750858301515b5f19600386901b1c1916600185901b178555620005d2565b5f85815260208120601f198616915b82811015620005a85788860151825594840194600190910190840162000587565b5085821015620005c657878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b608051611133620006085f395f81816101b6015281816102b101528181610463015261078601526111335ff3fe608060405234801561000f575f80fd5b50600436106100da575f3560e01c80636de8bcb911610088578063bb9aa28f11610063578063bb9aa28f146101fd578063c3403ddf14610204578063e13804a71461020c578063f49e323e1461021f575f80fd5b80636de8bcb9146101865780638da5cb5b146101b1578063a95824b4146101f0575f80fd5b80633477ee2e116100b85780633477ee2e14610140578063462e91ec146101605780635eff1bb814610173575f80fd5b806309eef43e146100de5780630f010058146101155780631ec6b60a14610136575b5f80fd5b6101006100ec366004610d3c565b60026020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b610128610123366004610d69565b61023e565b60405190815260200161010c565b61013e6102a6565b005b61015361014e366004610d69565b6103b3565b60405161010c9190610dc3565b61013e61016e366004610de9565b610458565b61013e610181366004610e94565b61055e565b610100610194366004610d3c565b6001600160a01b03165f9081526002602052604090205460ff1690565b6101d87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010c565b6003546101009060ff1681565b5f54610128565b61013e61077b565b61015361021a366004610d69565b610884565b61012861022d366004610d69565b60016020525f908152604090205481565b5f805482106102945760405162461bcd60e51b815260206004820152601560248201527f496e76616c69642063616e6469646174652049442e000000000000000000000060448201526064015b60405180910390fd5b505f9081526001602052604090205490565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103295760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b606482015260840161028b565b60035460ff161561037c5760405162461bcd60e51b815260206004820152601760248201527f566f74696e6720697320616c7265616479206f70656e2e000000000000000000604482015260640161028b565b6003805460ff191660011790556040517f877e2548498f42b7975a186b94ef1d32c86d420b7b806dd2be2bea293b895904905f90a1565b5f81815481106103c1575f80fd5b905f5260205f20015f9150905080546103d990610f0d565b80601f016020809104026020016040519081016040528092919081815260200182805461040590610f0d565b80156104505780601f1061042757610100808354040283529160200191610450565b820191905f5260205f20905b81548152906001019060200180831161043357829003601f168201915b505050505081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104db5760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b606482015260840161028b565b5f80546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563016105138282610f91565b505f547fe83b2a43e7e82d975c8a0a6d2f045153c869e111136a34d1889ab7b598e396a39061054490600190611051565b82604051610553929190611070565b60405180910390a150565b60035460ff166105b05760405162461bcd60e51b815260206004820152601360248201527f566f74696e67206973206e6f74206f70656e2e00000000000000000000000000604482015260640161028b565b5f5484106106005760405162461bcd60e51b815260206004820152601560248201527f496e76616c69642063616e6469646174652049442e0000000000000000000000604482015260640161028b565b335f9081526002602052604090205460ff161561065f5760405162461bcd60e51b815260206004820152601760248201527f596f75206861766520616c726561647920766f7465642e000000000000000000604482015260640161028b565b5f61069f8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061097f92505050565b5f868152600160205260409020549091506106c9575f8581526001602052604090208190556106f0565b5f858152600160205260409020546106e19082610995565b5f868152600160205260409020555b335f908152600260209081526040808320805460ff19166001908117909155888452909152902054610721906109c3565b505f8581526001602052604090205461073a90336109d2565b5060408051338152602081018790527f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca4910160405180910390a15050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107fe5760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b606482015260840161028b565b60035460ff166108505760405162461bcd60e51b815260206004820152601360248201527f566f74696e67206973206e6f74206f70656e2e00000000000000000000000000604482015260640161028b565b6003805460ff191690556040517f7a19ed057db79e3c2fa0b97a54b43bef4fce74b31bb6c01af514b9a18a7f70ab905f90a1565b5f5460609082106108d75760405162461bcd60e51b815260206004820152601560248201527f496e76616c69642063616e6469646174652049442e0000000000000000000000604482015260640161028b565b5f82815481106108e9576108e9611088565b905f5260205f200180546108fc90610f0d565b80601f016020809104026020016040519081016040528092919081815260200182805461092890610f0d565b80156109735780601f1061094a57610100808354040283529160200191610973565b820191905f5260205f20905b81548152906001019060200180831161095657829003601f168201915b50505050509050919050565b5f61098c838360046109e4565b90505b92915050565b5f826109a7576109a45f610b04565b92505b816109b8576109b55f610b04565b91505b61098c83835f610b16565b5f6109ce8230610bf6565b5090565b5f6109dd8383610bf6565b5090919050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b039091169063196d0b9b90610a5d9088903390899089906004016110bc565b6020604051808303815f875af1158015610a79573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a9d91906110fb565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610ae6575f80fd5b505af1158015610af8573d5f803e3d5ffd5b50505050509392505050565b5f61098f8263ffffffff166004610c7f565b5f808215610b295750600160f81b610b2c565b505f5b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600600181015460405163022f65e760e31b815260048101899052602481018890527fff00000000000000000000000000000000000000000000000000000000000000851660448201529192506001600160a01b03169063117b2f38906064016020604051808303815f875af1158015610bc8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bec91906110fb565b9695505050505050565b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610c64575f80fd5b505af1158015610c76573d5f803e3d5ffd5b50505050505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b0390911690639cd07acb90610cf49087908790600401611112565b6020604051808303815f875af1158015610d10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d3491906110fb565b949350505050565b5f60208284031215610d4c575f80fd5b81356001600160a01b0381168114610d62575f80fd5b9392505050565b5f60208284031215610d79575f80fd5b5035919050565b5f81518084525f5b81811015610da457602081850181015186830182015201610d88565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f61098c6020830184610d80565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215610df9575f80fd5b813567ffffffffffffffff80821115610e10575f80fd5b818401915084601f830112610e23575f80fd5b813581811115610e3557610e35610dd5565b604051601f8201601f19908116603f01168101908382118183101715610e5d57610e5d610dd5565b81604052828152876020848701011115610e75575f80fd5b826020860160208301375f928101602001929092525095945050505050565b5f805f8060608587031215610ea7575f80fd5b8435935060208501359250604085013567ffffffffffffffff80821115610ecc575f80fd5b818701915087601f830112610edf575f80fd5b813581811115610eed575f80fd5b886020828501011115610efe575f80fd5b95989497505060200194505050565b600181811c90821680610f2157607f821691505b602082108103610f3f57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610f8c57805f5260205f20601f840160051c81016020851015610f6a5750805b601f840160051c820191505b81811015610f89575f8155600101610f76565b50505b505050565b815167ffffffffffffffff811115610fab57610fab610dd5565b610fbf81610fb98454610f0d565b84610f45565b602080601f831160018114610ff2575f8415610fdb5750858301515b5f19600386901b1c1916600185901b178555611049565b5f85815260208120601f198616915b8281101561102057888601518255948401946001909101908401611001565b508582101561103d57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b8181038181111561098f57634e487b7160e01b5f52601160045260245ffd5b828152604060208201525f610d346040830184610d80565b634e487b7160e01b5f52603260045260245ffd5b605481106110b857634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f6110e36080830185610d80565b90506110f2606083018461109c565b95945050505050565b5f6020828403121561110b575f80fd5b5051919050565b82815260408101610d62602083018461109c56fea164736f6c6343000818000a";

type FHEVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEVoting__factory extends ContractFactory {
  constructor(...args: FHEVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _candidates: string[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_candidates, overrides || {});
  }
  override deploy(
    _candidates: string[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_candidates, overrides || {}) as Promise<
      FHEVoting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEVoting__factory {
    return super.connect(runner) as FHEVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEVotingInterface {
    return new Interface(_abi) as FHEVotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FHEVoting {
    return new Contract(address, _abi, runner) as unknown as FHEVoting;
  }
}
