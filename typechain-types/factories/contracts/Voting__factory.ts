/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Voting, VotingInterface } from "../../contracts/Voting";

const _abi = [
  {
    inputs: [],
    name: "getEncryptedNoVotes",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedYesVotes",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ebool",
        name: "encryptedVote",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b9e806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630121b93f1461005157806309eef43e1461006d578063526753281461009d578063dd67c82d146100bb575b600080fd5b61006b6004803603810190610066919061067f565b6100d9565b005b6100876004803603810190610082919061070a565b610209565b6040516100949190610752565b60405180910390f35b6100a5610229565b6040516100b291906107a8565b60405180910390f35b6100c3610233565b6040516100d091906107a8565b60405180910390f35b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d90610820565b60405180910390fd5b600081905060006101768361023c565b905061018c6000546101878461030a565b610320565b6000819055506101a66001546101a18361030a565b610320565b6001819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60026020528060005260406000206000915054906101000a900460ff1681565b6000600154905090565b60008054905090565b600061024782610398565b6102585761025560006103a5565b91505b60008290506000610268826103bb565b90506000608073ffffffffffffffffffffffffffffffffffffffff1663d260d9ab600d846040518363ffffffff1660e01b81526004016102a99291906108ec565b600060405180830381865afa1580156102c6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102ef9190610a42565b905060006102fc82610418565b905080945050505050919050565b6000610319600d836002610426565b9050919050565b600061032b836104cb565b61033c5761033960006104d8565b92505b610345826104cb565b6103565761035360006104d8565b91505b60008390506000839050600061038a60028484608073ffffffffffffffffffffffffffffffffffffffff16622df6196104ee565b905080935050505092915050565b6000808214159050919050565b60006103b482600d6000610582565b9050919050565b6060602067ffffffffffffffff8111156103d8576103d7610926565b5b6040519080825280601f01601f19166020018201604052801561040a5781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff16634a5a111786610451876103bb565b866040518463ffffffff1660e01b815260040161047093929190610a8b565b600060405180830381865afa15801561048d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104b69190610a42565b90506104c181610418565b9150509392505050565b6000808214159050919050565b60006104e78260026000610582565b9050919050565b600060608383886104fe896103bb565b610507896103bb565b6040518463ffffffff1660e01b815260040161052593929190610ac9565b600060405180830381865afa158015610542573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061056b9190610a42565b905061057681610627565b91505095945050505050565b60006060608073ffffffffffffffffffffffffffffffffffffffff1663ba19ac286105ac876103bb565b86866040518463ffffffff1660e01b81526004016105cc93929190610b2a565b600060405180830381865afa1580156105e9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106129190610a42565b905061061d81610418565b9150509392505050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61065c81610649565b811461066757600080fd5b50565b60008135905061067981610653565b92915050565b6000602082840312156106955761069461063f565b5b60006106a38482850161066a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106d7826106ac565b9050919050565b6106e7816106cc565b81146106f257600080fd5b50565b600081359050610704816106de565b92915050565b6000602082840312156107205761071f61063f565b5b600061072e848285016106f5565b91505092915050565b60008115159050919050565b61074c81610737565b82525050565b60006020820190506107676000830184610743565b92915050565b6000819050919050565b600061079261078d61078884610649565b61076d565b610649565b9050919050565b6107a281610777565b82525050565b60006020820190506107bd6000830184610799565b92915050565b600082825260208201905092915050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b600061080a600d836107c3565b9150610815826107d4565b602082019050919050565b60006020820190508181036000830152610839816107fd565b9050919050565b600060ff82169050919050565b61085681610840565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561089657808201518184015260208101905061087b565b60008484015250505050565b6000601f19601f8301169050919050565b60006108be8261085c565b6108c88185610867565b93506108d8818560208601610878565b6108e1816108a2565b840191505092915050565b6000604082019050610901600083018561084d565b818103602083015261091381846108b3565b90509392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61095e826108a2565b810181811067ffffffffffffffff8211171561097d5761097c610926565b5b80604052505050565b6000610990610635565b905061099c8282610955565b919050565b600067ffffffffffffffff8211156109bc576109bb610926565b5b6109c5826108a2565b9050602081019050919050565b60006109e56109e0846109a1565b610986565b905082815260208101848484011115610a0157610a00610921565b5b610a0c848285610878565b509392505050565b600082601f830112610a2957610a2861091c565b5b8151610a398482602086016109d2565b91505092915050565b600060208284031215610a5857610a5761063f565b5b600082015167ffffffffffffffff811115610a7657610a75610644565b5b610a8284828501610a14565b91505092915050565b6000606082019050610aa0600083018661084d565b8181036020830152610ab281856108b3565b9050610ac1604083018461084d565b949350505050565b6000606082019050610ade600083018661084d565b8181036020830152610af081856108b3565b90508181036040830152610b0481846108b3565b9050949350505050565b60008160030b9050919050565b610b2481610b0e565b82525050565b60006060820190508181036000830152610b4481866108b3565b9050610b53602083018561084d565b610b606040830184610b1b565b94935050505056fea2646970667358221220ce48580bd4f084d4dba3617d264fb30edee957a4e2cac2fc4ff580796014432164736f6c63430008140033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Voting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Voting__factory {
    return super.connect(runner) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new Interface(_abi) as VotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Voting {
    return new Contract(address, _abi, runner) as unknown as Voting;
  }
}
